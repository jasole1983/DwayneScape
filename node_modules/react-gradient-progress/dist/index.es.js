import React from 'react';
import PropTypes from 'prop-types';

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".circle_reactGradientProgress__1_0UG {\n  display: inline-block;\n  border-radius: 100%;\n  position: relative;\n}\n.circle_reactGradientProgressPercentage__3mR2b {\n  position: absolute;\n  height:100%;\n  width: 100%;\n  margin: 0px auto;\n}\n\n.circle_reactGradientProgressPercentageSpan__1HdhL {\n  position: absolute;\n  height:100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  text-align: center;\n}\n\n.circle_progressCircleBar__1IKUZ {\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n}\n";
var styles = { "reactGradientProgress": "circle_reactGradientProgress__1_0UG", "reactGradientProgressPercentage": "circle_reactGradientProgressPercentage__3mR2b", "reactGradientProgressPercentageSpan": "circle_reactGradientProgressPercentageSpan__1HdhL", "progressCircleBar": "circle_progressCircleBar__1IKUZ" };
styleInject(css);

var CircleProgress = function CircleProgress(_ref) {
  var percentage = _ref.percentage,
      width = _ref.width,
      strokeWidth = _ref.strokeWidth,
      fontSize = _ref.fontSize,
      fontColor = _ref.fontColor,
      fontFamily = _ref.fontFamily,
      primaryColor = _ref.primaryColor,
      secondaryColor = _ref.secondaryColor,
      fill = _ref.fill,
      hidePercentageText = _ref.hidePercentageText,
      strokeLinecap = _ref.strokeLinecap;

  var PI = 3.14;

  var R = width / 2 - strokeWidth * 2;
  var circumference = 2 * PI * R;
  var offset = circumference - percentage / 100 * circumference;
  var gradientId = ('' + primaryColor[0] + primaryColor[1]).replace(/#/g, '');
  return React.createElement(
    'div',
    {
      className: styles.reactGradientProgress,
      style: {
        height: width + 'px',
        width: width + 'px'
      }
    },
    !hidePercentageText ? React.createElement(
      'div',
      { id: styles.reactGradientProgressPercentage },
      React.createElement(
        'span',
        {
          className: styles.reactGradientProgressPercentageSpan,
          style: {
            fontSize: fontSize,
            fontFamily: fontFamily,
            color: fontColor
          }
        },
        percentage,
        '%'
      )
    ) : null,
    React.createElement(
      'svg',
      {
        width: '100%',
        height: '100%',
        version: '1.1',
        xmlns: 'http://www.w3.org/2000/svg'
      },
      React.createElement(
        'linearGradient',
        {
          id: gradientId,
          x1: '0%',
          y1: '0%',
          x2: '100%',
          y2: '100%'
        },
        React.createElement('stop', { offset: '0%', stopColor: primaryColor[0] }),
        React.createElement('stop', { offset: '100%', stopColor: primaryColor[1] })
      ),
      React.createElement('circle', {
        strokeWidth: strokeWidth,
        fill: 'transparent',
        r: R,
        cx: width / 2,
        cy: width / 2,
        stroke: secondaryColor,
        strokeDasharray: circumference + ' ' + circumference
      }),
      React.createElement('circle', {
        className: styles.progressCircleBar,
        strokeWidth: strokeWidth,
        fill: fill,
        r: R,
        cx: width / 2,
        cy: width / 2,
        stroke: 'url(#' + gradientId + ')',
        strokeLinecap: strokeLinecap,
        strokeDasharray: circumference + ' ' + circumference,
        strokeDashoffset: offset
      })
    )
  );
};

CircleProgress.propTypes = {
  percentage: PropTypes.number.isRequired,
  width: PropTypes.number,
  strokeWidth: PropTypes.number,
  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),
  fontSize: PropTypes.string,
  fontColor: PropTypes.string,
  fontFamily: PropTypes.string,
  primaryColor: PropTypes.array,
  secondaryColor: PropTypes.string,
  fill: PropTypes.string,
  hidePercentageText: PropTypes.bool
};

CircleProgress.defaultProps = {
  width: 200,
  strokeWidth: 5,
  strokeLinecap: 'round',
  fontSize: 'inherit',
  fontColor: 'inherit',
  fontFamily: 'inherit',
  primaryColor: ['#00BBFF', '#92d7f1'],
  secondaryColor: 'transparent',
  fill: 'transparent'
};

export { CircleProgress };
//# sourceMappingURL=index.es.js.map
